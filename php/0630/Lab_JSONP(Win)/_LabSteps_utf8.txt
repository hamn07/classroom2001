1.  環境設定


1-1 修改 C:\Windows\System32\drivers\etc\hosts
    加入 www.beauty.com 與 www.monster.com 模擬 DNS 設定
    例如:
    127.0.0.1 www.beauty.com
    127.0.0.1 www.monster.com


1-2 執行 setup_northwind.txt 的 SQL Script 以建立 northwind 資料庫。
    (Hint: 將檔案內的 SQL 指令全部貼到 PhpMyAdmin 的 SQL 頁面。)


1-3 在 Eclipse 建立一個新的 PHP 專案，專案名稱: Lab_JSONP
    (Hint: File | New | Prject...，選擇 PHP 分類的 PHP Project)


1-4 將 Lab_JSONP 裏頭的檔案(含資料夾)全部複製貼入新建好的專案。


1-5 視需要修改 config.php 的檔案內容，例如: root 的密碼。




2.  試用 Server 端各支程式，觀察傳回頁面的內容。


2-1 開啟 GetProductJson.php，執行程式時，代入 Query String: id=1，例如:
    http://localhost/Lab_JSONP/GetProductJson.php?id=1


2-2 開啟 GetProductJsonp.php，執行程式時，除了代入 Query String: id=1
    再加上 callback=MyCallback 參數，例如:
    http://localhost/Lab_JSONP/GetProductJsonp.php?id=1&callback=MyCallback 


2-3 將 callback 的參數值改成 DataArrived 參數，例如:
    http://localhost/Lab_JSONP/GetProductJsonp.php?id=1&callback=DataArrived 


2-4 請想想看，如果將上述 2-3 的網址當成 <script> 元素的 src 屬性，
    取回的文字內容會被瀏覽器視同是程式，是否就相當於呼叫 DataArrived() 函式。




3.  體驗 Same Origin Policy 限制。


3-1 開啟 GetDataFromServer_31.php，觀察 $.get() 那行的寫法(網址採用相對路徑)，
    執行程式，將 localhost 改成 www.beauty.com
    點按「Refresh」按鈕，觀察可否取得最新庫存量。


3-2 開啟 GetDataFromServer_32.php，觀察 $.get() 那行的寫法現在改採絕對路徑:
    $.get('http://www.monster.com/Lab_JSONP/GetProductJson.php?id=' + sID, DataArrived);
    執行程式，將 localhost 改成 www.beauty.com
    點按「Refresh」按鈕，觀察可否取得最新庫存量。(幾乎一樣的程式，為何這次不行呢?)


3-3 開啟 GetDataFromServer_33.php，
    請觀察並說明程式的作法:
    <script type="text/javascript">
        $("#btnRefresh").click(btnRefresh_click);

        function btnRefresh_click() {
            var script = document.createElement('script');
            // script.src = 'http://exec.hostzi.com/demo/demo_jqm_php/GetProductJsonp.php?id=1&callback=DataArrived';
            script.src = 'http://www.monster.com/Lab_JSONP/GetProductJsonp.php?id=1&callback=DataArrived';
            script.type = 'text/javascript';
            document.getElementsByTagName('head')[0].appendChild(script);
        }

        function DataArrived(data) {
            $("#txtUnitsInStock").val(data.UnitsInStock);
        }
    </script>
    執行程式時，確定 localhost 已改成 www.beauty.com
    點按「Refresh」按鈕，觀察可否取得最新庫存量。


3-3 開啟 GetDataFromServer_34.php，
    請觀察並說明程式的作法:

    <script type="text/javascript">
        $("#btnRefresh").click(btnRefresh_click);

        function btnRefresh_click() {
            $.ajax({
                url: "http://www.monster.com/Lab_JSONP/GetProductJsonp.php",
                type: "get",
                dataType: 'jsonp',
                data: {id: 1},
                jsonp: 'callback',
                jsonpCallback: 'DataArrived',
            });
        }

        function DataArrived(data) {
            $("#txtUnitsInStock").val(data.UnitsInStock);
        }
    </script>

    執行程式時，確定 localhost 已改成 www.beauty.com
    點按「Refresh」按鈕，觀察可否取得最新庫存量。




4.  Cross Domain Sharing


4-1 開啟 GetProductJson.php，去除 header 那行的註解。
    header("Access-Control-Allow-Origin: *");

    
4-2 開啟 GetDataFromServer_32.php，再次確認 $.get() 的寫法是絕對路徑
    點按「Refresh」按鈕，觀察可否取得最新庫存量。

